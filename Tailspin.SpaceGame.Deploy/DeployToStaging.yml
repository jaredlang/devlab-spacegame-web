stages:
- stage: 'DeployToStaging'
  displayName: 'Deploy to the staging environment'
  dependsOn: DeployToTest
  condition: succeeded('DeployToTest')
  variables:
  - group: Release
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-16.04'
    environment: staging
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appName: '$(WebAppNameStaging)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/Tailspin.SpaceGame.Web.zip'  
          - task: AzureAppServiceSettings@1
            displayName: 'Update web app settings'
            inputs:
              azureSubscription: '$(azureServiceConnection)'
              appName: $(WebAppNameStaging)
              resourceGroupName: $(ResourceGroupName)
              appSettings: |
                [
                  {
                    "name": "AppSettings:LeaderboardFunctionUrl",
                    "value": "http://$(LeaderboardAppName).azurewebsites.net/api/LeaderboardFunction",
                    "slotSetting": false
                  }
                ]
  - job: RunLoadTests
    dependsOn: Deploy
    displayName: 'Run load tests'
    pool:
      vmImage: 'ubuntu-16.04'
    variables:
      jmeterVersion: '5.2.1'
      perfTestDirectory: '$(System.DefaultWorkingDirectory)/Tailspin.SpaceGame.Web.PerfTests'
    steps: 
    - script: ls -l $(System.DefaultWorkingDirectory)
      displayName: 'List the files under $(System.DefaultWorkingDirectory)'
    - script: cat $(perfTestDirectory)/LoadTest.jmx
      displayName: 'Display the Load test Settings'
    - script: |
        wget -c ftp.ps.pl/pub/apache/jmeter/binaries/apache-jmeter-$(jmeterVersion).tgz
        tar -xf apache-jmeter-$(jmeterVersion).tgz
      displayName: 'Install Apache JMeter'
    - script: apache-jmeter-$(jmeterVersion)/bin/./jmeter -n -t $(perfTestDirectory)/LoadTest.jmx -o Results.xml -Jhostname=$(HostNameStaging)
      displayName: 'Run Load tests'
    - script: ls -l Results.xml
      displayName: 'List the Load test results file'
    - script: |
        sudo apt-get update
        sudo apt-get install xsltproc
        xsltproc $(perfTestDirectory)/JMeter2JUnit.xsl Results.xml > JUnit.xml
      displayName: 'Transform JMeter output to JUnit'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: JUnit
        testResultsFiles: JUnit.xml
        testRunTitle: 'Load Tests'
